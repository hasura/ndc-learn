kind: DataConnector
version: v2
definition:
  name: sqlite
  url:
    singleUrl: 
      value: 'http://localhost:8100'
  schema:
    collections:
      - arguments: {}
        name: albums
        deletable: false
        foreign_keys:
          album_artist:
            foreign_collection: artists
            column_mapping:
              artist_id: id
        uniqueness_constraints: {}
        type: albums
      - arguments: {}
        name: artists
        deletable: false
        foreign_keys: {}
        uniqueness_constraints: {}
        type: artists
    functions: []
    object_types:
      albums:
        fields:
          id:
            type:
              type: named
              name: any
          title:
            type:
              type: named
              name: any
          artist_id:
            type:
              type: named
              name: any
      artists:
        fields:
          id:
            type:
              type: named
              name: any
          name:
            type:
              type: named
              name: any
    procedures: []
    scalar_types:
      any:
        aggregate_functions: {}
        comparison_operators: {}

---
kind: ScalarType
version: v1
definition:
  name: any
  graphql:
    typeName: any

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: sqlite
  dataConnectorScalarType: any
  representation: any
  graphql:
    comparisonExpressionTypeName: anyComparisonExp

---
kind: ObjectType
version: v1
definition:
  name: albums
  graphql:
    typeName: albums
    inputTypeName: albumsInput
  fields:
    - name: id
      type: any!
    - name: title
      type: any!
    - name: artist_id
      type: any!

---
kind: TypePermissions
version: v1
definition:
  typeName: albums
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - title
          - artist_id

---
kind: Model
version: v1
definition:
  name: albums
  objectType: albums
  filterableFields:
    - fieldName: id
      operators:
        enableAll: true
    - fieldName: title
      operators:
        enableAll: true
    - fieldName: artist_id
      operators:
        enableAll: true
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: title
      orderByDirections:
        enableAll: true
    - fieldName: artist_id
      orderByDirections:
        enableAll: true
  arguments: []
  graphql:
    selectUniques: []
    selectMany:
      queryRootField: albums
    filterExpressionType: albumsBoolExp
    orderByExpressionType: albumsOrderBy
  source:
    collection: albums
    dataConnectorName: sqlite

---
kind: ModelPermissions
version: v1
definition:
  modelName: albums
  permissions:
    - role: admin
      select:
        filter: null

---
kind: ObjectType
version: v1
definition:
  name: artists
  graphql:
    typeName: artists
    inputTypeName: artistsInput
  fields:
    - name: id
      type: any!
    - name: name
      type: any!

---
kind: TypePermissions
version: v1
definition:
  typeName: artists
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - name

---
kind: Model
version: v1
definition:
  name: artists
  objectType: artists
  filterableFields:
    - fieldName: id
      operators:
        enableAll: true
    - fieldName: name
      operators:
        enableAll: true
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: name
      orderByDirections:
        enableAll: true
  arguments: []
  graphql:
    selectUniques: []
    selectMany:
      queryRootField: artists
    filterExpressionType: artistsBoolExp
    orderByExpressionType: artistsOrderBy
  source:
    collection: artists
    dataConnectorName: sqlite

---
kind: ModelPermissions
version: v1
definition:
  modelName: artists
  permissions:
    - role: admin
      select:
        filter: null

---
kind: Relationship
version: v1
definition:
  name: artist
  source: albums
  target:
    model:
      relationshipType: Object
      name: artists
  mapping:
    - source:
        fieldPath:
          - fieldName: artist_id
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: albums
  source: artists
  target:
    model:
      relationshipType: Array
      name: albums
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: artist_id
